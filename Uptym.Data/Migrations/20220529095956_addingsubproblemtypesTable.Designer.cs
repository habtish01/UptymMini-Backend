// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Uptym.Data.DataContext;

namespace Uptym.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220529095956_addingsubproblemtypesTable")]
    partial class addingsubproblemtypesTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ProvidedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProvidedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Articles", "CMS");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.ArticleImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("AttachmentSize")
                        .HasColumnType("real");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtensionFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsExternalResource")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ArticleImages", "CMS");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.ChannelVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AttachmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("AttachmentSize")
                        .HasColumnType("real");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtensionFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsExternalResource")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ChannelVideos", "CMS");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ContactInfos", "CMS");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LogoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Features", "CMS");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.FrequentlyAskedQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("FrequentlyAskedQuestions", "CMS");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.InquiryQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReplyProvided")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("InquiryQuestions", "CMS");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.InquiryQuestionReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("InquiryQuestionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("InquiryQuestionId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("InquiryQuestionReplies", "CMS");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.UsefulResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AttachmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("AttachmentSize")
                        .HasColumnType("real");

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DownloadCount")
                        .HasColumnType("int");

                    b.Property<string>("ExtensionFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsExternalResource")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("UsefulResources", "CMS");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountLoginAttempts")
                        .HasColumnType("int");

                    b.Property<double>("AttachmentsMaxSize")
                        .HasColumnType("float");

                    b.Property<int>("NumOfDaysToChangePassword")
                        .HasColumnType("int");

                    b.Property<int>("PasswordExpiryTime")
                        .HasColumnType("int");

                    b.Property<int>("ReminderDays")
                        .HasColumnType("int");

                    b.Property<int>("TimeToSessionTimeOut")
                        .HasColumnType("int");

                    b.Property<int>("TimesCountBeforePasswordReuse")
                        .HasColumnType("int");

                    b.Property<int>("TrialPeriodDays")
                        .HasColumnType("int");

                    b.Property<double>("UserPhotosize")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Configurations", "Configuration");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.ConfigurationAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AttachmentsMaxSize")
                        .HasColumnType("float");

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfAction")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumOfDaysToChangePassword")
                        .HasColumnType("int");

                    b.Property<int>("PasswordExpiryTime")
                        .HasColumnType("int");

                    b.Property<int>("ReminderDays")
                        .HasColumnType("int");

                    b.Property<int>("TimeToSessionTimeOut")
                        .HasColumnType("int");

                    b.Property<int>("TimesCountBeforePasswordReuse")
                        .HasColumnType("int");

                    b.Property<int>("TrialPeriodDays")
                        .HasColumnType("int");

                    b.Property<double>("UserPhotosize")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("ConfigurationAudits", "Configuration");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Badge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BadgeClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GroupTitle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ParentMenuId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Menus", "Configuration");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.MenuPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("PlanId");

                    b.ToTable("MenuPlans", "Configuration");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.MenuRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuRoles", "Configuration");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.UserPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PreferenceKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WidgetId");

                    b.ToTable("UserPreferences", "Configuration");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.AutoSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<int>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<int?>("AutoSchedulePerformerId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentScheduleTypeId")
                        .HasColumnType("int");

                    b.Property<int>("IntervalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("ScheduledTime")
                        .HasColumnType("time");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("EquipmentScheduleTypeId");

                    b.HasIndex("IntervalId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("AutoSchedules", "Equipment");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.AutoScheduleAssignedEngineers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AssignedEngineerId")
                        .HasColumnType("int");

                    b.Property<int>("AutoScheduleId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AutoScheduleId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("AutoScheduleAssignedEngineers", "Equipment");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AssignedDriver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChasisNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipmentLookupId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentStatus")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("FuelConsumption")
                        .HasColumnType("int");

                    b.Property<int>("HealthFacilityId")
                        .HasColumnType("int");

                    b.Property<string>("InstalledBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstalledDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastPreventiveMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfHoursWorked")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("PlateNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StartKMReading")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentLookupId");

                    b.HasIndex("HealthFacilityId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Equipments", "Equipment");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.EquipmentContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ContractProviderId")
                        .HasColumnType("int");

                    b.Property<int>("ContractType")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfflineContractor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContractProviderId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EquipmentContracts", "Equipment");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.EquipmentDocumentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DocumentationTypeId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EquipmentDocumentations", "Equipment");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.EquipmentOperator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EquipmentOperators", "Equipment");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AutoScheduleId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MetricsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AutoScheduleId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("MetricsId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Tasks", "Equipment");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.Timesheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Timesheets", "Equipment");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.AssignedEngineer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AssignedEngineersId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EngineerType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkOrderID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedEngineersId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkOrderID");

                    b.ToTable("AssignedEngineers", "Maintenance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.MaintenanceAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("EngineerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("MaintenanceActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EngineerId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("MaintenanceActions", "Maintenance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.Priority", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Priority", "Maintenance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.UserTransactionType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTransactionTypes", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AssignedEngineerId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractorId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ForwardedFromId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("MaintenanceHeadId")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerPriorityId")
                        .HasColumnType("int");

                    b.Property<string>("OfflineContractor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlannedEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlannedStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkOrderHeaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedEngineerId");

                    b.HasIndex("ContractorId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ForwardedFromId");

                    b.HasIndex("MaintenanceHeadId");

                    b.HasIndex("ManagerPriorityId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkOrderHeaderId");

                    b.ToTable("WorkOrders", "Maintenance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AutoScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("AutoScheduleStatus")
                        .HasColumnType("int");

                    b.Property<int?>("AutoScheduleStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EquipmentFailureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("ErrorCodeId")
                        .HasColumnType("int");

                    b.Property<string>("FailureTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsClosed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("NextScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProblemTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReporterPriority")
                        .HasColumnType("int");

                    b.Property<int>("ReporterPriorityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkorderTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutoScheduleId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ErrorCodeId");

                    b.HasIndex("ProblemTypeId");

                    b.HasIndex("ReportedById");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkorderTypeId");

                    b.ToTable("WorkOrderHeader", "Maintenance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderMaintenanceCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Cost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("MaintenanceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("WorkOrderMaintenanceCosts", "Maintenance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderSparepart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("SparePartId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("SparePartId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("WorkOrderSpareparts", "Maintenance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EquipmentStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.Property<int>("WorkOrderStatusTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkOrderId");

                    b.HasIndex("WorkOrderStatusTypeId");

                    b.ToTable("WorkOrderStatus", "Maintenance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderStatusType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkOrderStatusType", "Maintenance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderTaskList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MetricsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("WorkOrderTaskLists", "Maintenance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkOrderType", "Maintenance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Continent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Continents", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CallingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContinentId")
                        .HasColumnType("int");

                    b.Property<int>("CountryPeriodId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NativeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Population")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContinentId");

                    b.HasIndex("CountryPeriodId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Countries", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.CountryPeriod", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CountryPeriods", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.DocumentationType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentationTypes", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EquipmentCategories", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipmentCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentCategoryId");

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EquipmentLookups", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentLookupDocumentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentLookupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("IX_EquipmentDocumentations_CreatedBy1");

                    b.HasIndex("DocumentationTypeId")
                        .HasDatabaseName("IX_EquipmentDocumentations_DocumentationTypeId1");

                    b.HasIndex("EquipmentLookupId");

                    b.HasIndex("UpdatedBy")
                        .HasDatabaseName("IX_EquipmentDocumentations_UpdatedBy1");

                    b.ToTable("EquipmentDocumentations", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentLookupSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentLookupId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentScheduleIntervalId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentScheduleTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MetricsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduleDuration")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("EquipmentLookupId");

                    b.HasIndex("EquipmentScheduleIntervalId");

                    b.HasIndex("EquipmentScheduleTypeId");

                    b.HasIndex("MetricsId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EquipmentLookupSchedules", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentScheduleInterval", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentScheduleIntervals", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentScheduleType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentScheduleTypes", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EquipmentTypes", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.ErrorCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentLookupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentLookupId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ErrorCodes", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.HealthFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HealthFacilityTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("Latitude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Longitude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("Telephone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HealthFacilityTypeId");

                    b.HasIndex("RegionId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("HealthFacilities", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.HealthFacilityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("HealthFacilityType", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.MaintenanceCheckList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipmentLookupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkOrderTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentLookupId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkOrderTypeId");

                    b.ToTable("MaintenanceCheckList", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.MaintenanceCheckListDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MaintenanceCheckListId")
                        .HasColumnType("int");

                    b.Property<string>("Task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("MaintenanceCheckListId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("MaintenanceCheckListDetails", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Manufacturer", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Metrics", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Metrics", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Operator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentLookupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentLookupId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Operators", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.ProblemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentLookupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaskListTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentLookupId");

                    b.HasIndex("TaskListTypeId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ProblemTypes", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Regions", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Sparepart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentLookupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentLookupId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Spareparts", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.SubProblemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProblemTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ProblemTypeId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("SubProblemTypes", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.TaskList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipmentLookupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("TaskListTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkOrderTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EquipmentLookupId");

                    b.HasIndex("TaskListTypeId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkOrderTypeId");

                    b.ToTable("TaskList", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.TaskListDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskListId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("TaskListId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("TaskListDetails", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.TaskListType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskListType", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Widget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WidgetTag")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Widgets", "Metadata");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", "Security");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "Security");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChangePassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("EmailVerifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HealthFacilityId")
                        .HasColumnType("int");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("NextPasswordExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.HasIndex("HealthFacilityId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", "Security");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "Security");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "Security");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId1")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("RoleId1");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles", "Security");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationUserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "Security");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.UserTransactionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserTransactionTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.HasIndex("UserTransactionTypeId");

                    b.ToTable("UserTransactionHistories", "Security");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Billing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardLast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiscountID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LocationIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentIntentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DiscountID");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Billings", "Subscription");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsTrial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("ReminderDays")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkHistory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("PlanId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Customers", "Subscription");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("CustomerTypes", "Subscription");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Discount", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlanID");

                    b.ToTable("Discounts", "Subscription");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AutoActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("BillingId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExtraEndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReminderOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ReminderStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillingId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PlanId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Memberships", "Subscription");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SK")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes", "Subscription");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Permission", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions", "Subscription");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExtraDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaypalPlanId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanMonths")
                        .HasColumnType("int");

                    b.Property<int>("PlanTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Plans", "Subscription");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.PlanPermission", b =>
                {
                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int?>("LimitDays")
                        .HasColumnType("int");

                    b.Property<int?>("LimitJobs")
                        .HasColumnType("int");

                    b.HasKey("PlanId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("PlanPermissions", "Subscription");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.UpcomingPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailReminderStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("PhoneReminderStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("UpcomingPayments", "Subscription");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.sp.EquipmentLocation", b =>
                {
                    b.Property<string>("Equipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipment_Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Functionality_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Longitude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.ToTable("EquipmentLocation");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.sp.EquipmentSummary", b =>
                {
                    b.Property<int>("EquipmentUnderService")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentUnderWarranty")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentWithWarranty")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfEquipment")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfNotFunctionalEquipment")
                        .HasColumnType("int");

                    b.ToTable("EquipmentSummary");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.sp.InspectionCompliance", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("HealthFacilityId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCompletedIMs")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfScheduledIMs")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.ToTable("InspectionCompliance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.sp.InstrumentTotalSummary", b =>
                {
                    b.Property<string>("AvgInstrumentDowntime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvgInstrumentUptime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mrttr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mtbf")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("InstrumentTotalSummary");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.sp.MaintenanceCost", b =>
                {
                    b.Property<int>("HealthFacilityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalCosts")
                        .HasColumnType("int");

                    b.ToTable("MaintenanceCost");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.sp.MaintenanceMeanTimeSummary", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("HealthFacilityId")
                        .HasColumnType("int");

                    b.Property<int>("HoursSinceActive")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfFailure")
                        .HasColumnType("int");

                    b.Property<int>("OfflineHours")
                        .HasColumnType("int");

                    b.Property<int>("OperationalHours")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.ToTable("MaintenanceMeanTimeSummary");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.sp.NewFreqMaintainedReport", b =>
                {
                    b.Property<int>("NumberOfFailure")
                        .HasColumnType("int");

                    b.Property<string>("OperatorName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("NewFreqMaintainedReport");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.sp.OperatorFailure", b =>
                {
                    b.Property<int>("HealthFacilityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfReportedFailures")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.ToTable("OperatorFailure");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.sp.PreventiveCompliance", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("HealthFacilityId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCompletedPMs")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfScheduledPMs")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.ToTable("PreventiveCompliance");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.sp.TestNumber", b =>
                {
                    b.Property<string>("five")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("four")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("one")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("three")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("two")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("TestNumbers");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.sp.WorkOrderSummary", b =>
                {
                    b.Property<int>("NumberOfClosedWorkOrder")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfNewWorkOrder")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfOpenWorkOrder")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfOverdueWorkOrder")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfUnhandledInspection")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfWorkOrderAwaitingConfirmation")
                        .HasColumnType("int");

                    b.ToTable("WorkOrderSummary");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.Article", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.ArticleImage", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.CMSSchema.Article", "Article")
                        .WithMany("ArticleImages")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Article");

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.ChannelVideo", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.ContactInfo", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.Feature", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.FrequentlyAskedQuestion", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.InquiryQuestion", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.InquiryQuestionReply", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.CMSSchema.InquiryQuestion", "InquiryQuestion")
                        .WithMany("InquiryQuestionReplies")
                        .HasForeignKey("InquiryQuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("InquiryQuestion");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.UsefulResource", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.ConfigurationAudit", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.ConfigurationSchema.Configuration", "Configuration")
                        .WithMany("ConfigurationAudits")
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Configuration");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.MenuPlan", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.ConfigurationSchema.Menu", "Menu")
                        .WithMany("MenuPlans")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Plan", "Plan")
                        .WithMany("MenuPlans")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.MenuRole", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.ConfigurationSchema.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationRole", "Role")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.UserPreference", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.Widget", "Widget")
                        .WithMany()
                        .HasForeignKey("WidgetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.AutoSchedule", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.EquipmentSchema.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentScheduleType", "EquipmentScheduleType")
                        .WithMany()
                        .HasForeignKey("EquipmentScheduleTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentScheduleInterval", "Interval")
                        .WithMany()
                        .HasForeignKey("IntervalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Equipment");

                    b.Navigation("EquipmentScheduleType");

                    b.Navigation("Interval");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.AutoScheduleAssignedEngineers", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.EquipmentSchema.AutoSchedule", null)
                        .WithMany("AutoScheduleAssignedEngineers")
                        .HasForeignKey("AutoScheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.Equipment", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", "EquipmentLookup")
                        .WithMany("Equipments")
                        .HasForeignKey("EquipmentLookupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.HealthFacility", "HealthFacility")
                        .WithMany("Instruments")
                        .HasForeignKey("HealthFacilityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Customer", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("EquipmentLookup");

                    b.Navigation("HealthFacility");

                    b.Navigation("Owner");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.EquipmentContract", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Customer", "ContractProvider")
                        .WithMany()
                        .HasForeignKey("ContractProviderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.EquipmentSchema.Equipment", "Equipment")
                        .WithMany("EquipmentContracts")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ContractProvider");

                    b.Navigation("Creator");

                    b.Navigation("Equipment");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.EquipmentDocumentation", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.DocumentationType", "DocumentationType")
                        .WithMany()
                        .HasForeignKey("DocumentationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.EquipmentSchema.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Customer");

                    b.Navigation("DocumentationType");

                    b.Navigation("Equipment");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.EquipmentOperator", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.EquipmentSchema.Equipment", "Equipment")
                        .WithMany("EquipmentOperators")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Equipment");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.Tasks", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.EquipmentSchema.AutoSchedule", "AutoSchedules")
                        .WithMany("TaskList")
                        .HasForeignKey("AutoScheduleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.Metrics", "Metrices")
                        .WithMany()
                        .HasForeignKey("MetricsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AutoSchedules");

                    b.Navigation("Creator");

                    b.Navigation("Metrices");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.Timesheet", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.EquipmentSchema.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Equipment");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.AssignedEngineer", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "AssignedEngineers")
                        .WithMany()
                        .HasForeignKey("AssignedEngineersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.WorkOrder", "WorkOrder")
                        .WithMany("AssignedEngineers")
                        .HasForeignKey("WorkOrderID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssignedEngineers");

                    b.Navigation("Creator");

                    b.Navigation("Updator");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.MaintenanceAction", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Engineer")
                        .WithMany()
                        .HasForeignKey("EngineerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.WorkOrder", "WorkOrder")
                        .WithMany("MaintenanceActions")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Engineer");

                    b.Navigation("Updator");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrder", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "AssignedEngineer")
                        .WithMany()
                        .HasForeignKey("AssignedEngineerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Customer", "Contractor")
                        .WithMany()
                        .HasForeignKey("ContractorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Customer", "ForwardedFrom")
                        .WithMany()
                        .HasForeignKey("ForwardedFromId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "MaintenanceHead")
                        .WithMany()
                        .HasForeignKey("MaintenanceHeadId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.Priority", "ManagerPriority")
                        .WithMany()
                        .HasForeignKey("ManagerPriorityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderHeader", "WorkOrderHeader")
                        .WithMany("WorkOrders")
                        .HasForeignKey("WorkOrderHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssignedEngineer");

                    b.Navigation("Contractor");

                    b.Navigation("Creator");

                    b.Navigation("ForwardedFrom");

                    b.Navigation("MaintenanceHead");

                    b.Navigation("ManagerPriority");

                    b.Navigation("Updator");

                    b.Navigation("WorkOrderHeader");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderHeader", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.EquipmentSchema.AutoSchedule", "AutoSchedule")
                        .WithMany("WorkOrderHeader")
                        .HasForeignKey("AutoScheduleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.EquipmentSchema.Equipment", "Equipment")
                        .WithMany("WorkOrderHeaders")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.ErrorCode", "ErrorCode")
                        .WithMany()
                        .HasForeignKey("ErrorCodeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.ProblemType", "ProblemType")
                        .WithMany()
                        .HasForeignKey("ProblemTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "ReportedBy")
                        .WithMany()
                        .HasForeignKey("ReportedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderType", "WorkOrderType")
                        .WithMany()
                        .HasForeignKey("WorkorderTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AutoSchedule");

                    b.Navigation("Creator");

                    b.Navigation("Equipment");

                    b.Navigation("ErrorCode");

                    b.Navigation("ProblemType");

                    b.Navigation("ReportedBy");

                    b.Navigation("Updator");

                    b.Navigation("WorkOrderType");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderMaintenanceCost", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Updator");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderSparepart", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.Sparepart", "Sparepart")
                        .WithMany()
                        .HasForeignKey("SparePartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Sparepart");

                    b.Navigation("Updator");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderStatus", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.WorkOrder", "WorkOrder")
                        .WithMany("WorkOrderStatus")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderStatusType", "WorkOrderStatusType")
                        .WithMany()
                        .HasForeignKey("WorkOrderStatusTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Updator");

                    b.Navigation("WorkOrder");

                    b.Navigation("WorkOrderStatusType");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderTaskList", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Country", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.Continent", "Continent")
                        .WithMany("Countries")
                        .HasForeignKey("ContinentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.CountryPeriod", "CountryPeriod")
                        .WithMany("Countries")
                        .HasForeignKey("CountryPeriodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Continent");

                    b.Navigation("CountryPeriod");

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentCategory", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("EquipmentType");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentCategory", "EquipmentCategory")
                        .WithMany("EquipmentLookups")
                        .HasForeignKey("EquipmentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.Manufacturer", "Manufacturer")
                        .WithMany("EquipmentLookups")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("EquipmentCategory");

                    b.Navigation("EquipmentType");

                    b.Navigation("Manufacturer");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentLookupDocumentation", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.DocumentationType", "DocumentationType")
                        .WithMany()
                        .HasForeignKey("DocumentationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", "EquipmentLookup")
                        .WithMany()
                        .HasForeignKey("EquipmentLookupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("DocumentationType");

                    b.Navigation("EquipmentLookup");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentLookupSchedule", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.EquipmentSchema.Equipment", null)
                        .WithMany("AutoSchedules")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", "EquipmentLookup")
                        .WithMany("EquipmentSchedules")
                        .HasForeignKey("EquipmentLookupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentScheduleInterval", "EquipmentScheduleInterval")
                        .WithMany()
                        .HasForeignKey("EquipmentScheduleIntervalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentScheduleType", "EquipmentLookupScheduleType")
                        .WithMany()
                        .HasForeignKey("EquipmentScheduleTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.Metrics", "Metrics")
                        .WithMany()
                        .HasForeignKey("MetricsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("EquipmentLookup");

                    b.Navigation("EquipmentLookupScheduleType");

                    b.Navigation("EquipmentScheduleInterval");

                    b.Navigation("Metrics");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentType", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.ErrorCode", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", "EquipmentLookup")
                        .WithMany("ErrorCodes")
                        .HasForeignKey("EquipmentLookupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("EquipmentLookup");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.HealthFacility", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.HealthFacilityType", "HealthFacilityType")
                        .WithMany("HealthFacilties")
                        .HasForeignKey("HealthFacilityTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.Region", "Region")
                        .WithMany("HealthFacilties")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("HealthFacilityType");

                    b.Navigation("Region");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.HealthFacilityType", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.MaintenanceCheckList", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", "EquipmentLookup")
                        .WithMany("MaintenanceCheckLists")
                        .HasForeignKey("EquipmentLookupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderType", "WorkOrderType")
                        .WithMany()
                        .HasForeignKey("WorkOrderTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("EquipmentLookup");

                    b.Navigation("Updator");

                    b.Navigation("WorkOrderType");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.MaintenanceCheckListDetail", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.MaintenanceCheckList", "MaintenanceCheckList")
                        .WithMany("MaintenanceCheckListDetails")
                        .HasForeignKey("MaintenanceCheckListId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("MaintenanceCheckList");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Manufacturer", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Operator", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", "EquipmentLookup")
                        .WithMany()
                        .HasForeignKey("EquipmentLookupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("EquipmentLookup");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.ProblemType", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", "EquipmentLookup")
                        .WithMany("ProblemTypes")
                        .HasForeignKey("EquipmentLookupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.TaskListType", null)
                        .WithMany("ProblemTypes")
                        .HasForeignKey("TaskListTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("EquipmentLookup");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Region", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Country");

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Sparepart", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", "EquipmentLookup")
                        .WithMany("Spareparts")
                        .HasForeignKey("EquipmentLookupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("EquipmentLookup");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.SubProblemType", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.ProblemType", "ProblemType")
                        .WithMany()
                        .HasForeignKey("ProblemTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("ProblemType");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.TaskList", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", "EquipmentLookup")
                        .WithMany()
                        .HasForeignKey("EquipmentLookupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.TaskListType", null)
                        .WithMany("TaskLists")
                        .HasForeignKey("TaskListTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderType", "WorkOrderType")
                        .WithMany()
                        .HasForeignKey("WorkOrderTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("EquipmentLookup");

                    b.Navigation("Updator");

                    b.Navigation("WorkOrderType");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.TaskListDetail", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.TaskList", "TaskList")
                        .WithMany("TaskListDetails")
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("TaskList");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationRoleClaim", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationRole", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Customer", "Customer")
                        .WithMany("Users")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.MetadataSchema.HealthFacility", null)
                        .WithMany("Users")
                        .HasForeignKey("HealthFacilityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationUserClaim", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationUserLogin", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationUserRole", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId1")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationUserToken", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.UserTransactionHistory", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.MaintenanceSchema.UserTransactionType", "UserTransactionType")
                        .WithMany("UserTransactionHistories")
                        .HasForeignKey("UserTransactionTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("Uptym.Data.BaseModeling.Location", "Location", b1 =>
                        {
                            b1.Property<int>("UserTransactionHistoryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<string>("ASN")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CallingCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ContinentCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ContinentName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CountryCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CountryName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Flag")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("IP")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<float?>("Latitude")
                                .HasColumnType("real");

                            b1.Property<float?>("Longitude")
                                .HasColumnType("real");

                            b1.Property<string>("Postal")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("RTL")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValue(false);

                            b1.Property<string>("Region")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("RegionCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserTransactionHistoryId");

                            b1.ToTable("UserTransactionHistories");

                            b1.WithOwner()
                                .HasForeignKey("UserTransactionHistoryId");
                        });

                    b.Navigation("Creator");

                    b.Navigation("Location");

                    b.Navigation("Updator");

                    b.Navigation("User");

                    b.Navigation("UserTransactionType");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Billing", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Customer", "Customer")
                        .WithMany("Billings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Discount", "Discount")
                        .WithMany("Billings")
                        .HasForeignKey("DiscountID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.PaymentType", "PaymentType")
                        .WithMany("Billings")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Customer");

                    b.Navigation("Discount");

                    b.Navigation("PaymentType");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Customer", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.CustomerType", "CustomerType")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Plan", "Plan")
                        .WithMany("Customers")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Uptym.Data.BaseModeling.Location", "Location", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<string>("ASN")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CallingCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ContinentCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ContinentName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CountryCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CountryName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Flag")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("IP")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<float?>("Latitude")
                                .HasColumnType("real");

                            b1.Property<float?>("Longitude")
                                .HasColumnType("real");

                            b1.Property<string>("Postal")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("RTL")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValue(false);

                            b1.Property<string>("Region")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("RegionCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("Creator");

                    b.Navigation("CustomerType");

                    b.Navigation("Location");

                    b.Navigation("Plan");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.CustomerType", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Discount", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Plan", "Plan")
                        .WithMany("Discounts")
                        .HasForeignKey("PlanID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Membership", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Billing", "Billing")
                        .WithMany("Memberships")
                        .HasForeignKey("BillingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Customer", "Customer")
                        .WithMany("Membership")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Plan", "Plan")
                        .WithMany("Memberships")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Billing");

                    b.Navigation("Creator");

                    b.Navigation("Customer");

                    b.Navigation("Plan");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Plan", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.PlanPermission", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Permission", "Permission")
                        .WithMany("PlanPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Plan", "Plan")
                        .WithMany("PlanPermissions")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.UpcomingPayment", b =>
                {
                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Uptym.Data.DbModels.SubscriptionSchema.Customer", "Customer")
                        .WithMany("UpcomingPayments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", "Updator")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Customer");

                    b.Navigation("Updator");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.Article", b =>
                {
                    b.Navigation("ArticleImages");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.CMSSchema.InquiryQuestion", b =>
                {
                    b.Navigation("InquiryQuestionReplies");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.Configuration", b =>
                {
                    b.Navigation("ConfigurationAudits");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.ConfigurationSchema.Menu", b =>
                {
                    b.Navigation("MenuPlans");

                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.AutoSchedule", b =>
                {
                    b.Navigation("AutoScheduleAssignedEngineers");

                    b.Navigation("TaskList");

                    b.Navigation("WorkOrderHeader");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.EquipmentSchema.Equipment", b =>
                {
                    b.Navigation("AutoSchedules");

                    b.Navigation("EquipmentContracts");

                    b.Navigation("EquipmentOperators");

                    b.Navigation("WorkOrderHeaders");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.UserTransactionType", b =>
                {
                    b.Navigation("UserTransactionHistories");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrder", b =>
                {
                    b.Navigation("AssignedEngineers");

                    b.Navigation("MaintenanceActions");

                    b.Navigation("WorkOrderStatus");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MaintenanceSchema.WorkOrderHeader", b =>
                {
                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Continent", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Country", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.CountryPeriod", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentCategory", b =>
                {
                    b.Navigation("EquipmentLookups");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.EquipmentLookup", b =>
                {
                    b.Navigation("Equipments");

                    b.Navigation("EquipmentSchedules");

                    b.Navigation("ErrorCodes");

                    b.Navigation("MaintenanceCheckLists");

                    b.Navigation("ProblemTypes");

                    b.Navigation("Spareparts");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.HealthFacility", b =>
                {
                    b.Navigation("Instruments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.HealthFacilityType", b =>
                {
                    b.Navigation("HealthFacilties");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.MaintenanceCheckList", b =>
                {
                    b.Navigation("MaintenanceCheckListDetails");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Manufacturer", b =>
                {
                    b.Navigation("EquipmentLookups");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.Region", b =>
                {
                    b.Navigation("HealthFacilties");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.TaskList", b =>
                {
                    b.Navigation("TaskListDetails");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.MetadataSchema.TaskListType", b =>
                {
                    b.Navigation("ProblemTypes");

                    b.Navigation("TaskLists");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationRole", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SecuritySchema.ApplicationUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("Tokens");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Billing", b =>
                {
                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Customer", b =>
                {
                    b.Navigation("Billings");

                    b.Navigation("Membership");

                    b.Navigation("UpcomingPayments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.CustomerType", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Discount", b =>
                {
                    b.Navigation("Billings");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.PaymentType", b =>
                {
                    b.Navigation("Billings");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Permission", b =>
                {
                    b.Navigation("PlanPermissions");
                });

            modelBuilder.Entity("Uptym.Data.DbModels.SubscriptionSchema.Plan", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Discounts");

                    b.Navigation("Memberships");

                    b.Navigation("MenuPlans");

                    b.Navigation("PlanPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
